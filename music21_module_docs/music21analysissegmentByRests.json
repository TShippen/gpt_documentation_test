[
    {
        "text": "Navigation",
        "type": "Title"
    },
    {
        "text": "index",
        "type": "ListItem"
    },
    {
        "text": "modules |",
        "type": "ListItem"
    },
    {
        "text": "next |",
        "type": "ListItem"
    },
    {
        "text": "previous |",
        "type": "ListItem"
    },
    {
        "text": "music21 \u00bb",
        "type": "ListItem"
    },
    {
        "text": "Module Reference \u00bb",
        "type": "ListItem"
    },
    {
        "text": "music21.analysis.segmentByRests",
        "type": "ListItem"
    },
    {
        "text": "Previous topic",
        "type": "Title"
    },
    {
        "text": "music21.analysis.reduction",
        "type": "Title"
    },
    {
        "text": "Next topic",
        "type": "Title"
    },
    {
        "text": "music21.analysis.transposition",
        "type": "Title"
    },
    {
        "text": "Table of Contents",
        "type": "Title"
    },
    {
        "text": "music21.analysis.segmentByRests\nSegmenter\nSegmenter\nSegmenter.getIntervalList()\nSegmenter.getSegmentsList()",
        "type": "ListItem"
    },
    {
        "text": "Table of Contents",
        "type": "Title"
    },
    {
        "text": "About music21",
        "type": "ListItem"
    },
    {
        "text": "User's Guide",
        "type": "ListItem"
    },
    {
        "text": "Module Reference",
        "type": "ListItem"
    },
    {
        "text": "Installation",
        "type": "ListItem"
    },
    {
        "text": "Developer Reference",
        "type": "ListItem"
    },
    {
        "text": "Documentation and tests in progress",
        "type": "ListItem"
    },
    {
        "text": "Quick search",
        "type": "Title"
    },
    {
        "text": "This Page",
        "type": "Title"
    },
    {
        "text": "Show Source",
        "type": "ListItem"
    },
    {
        "text": "music21.analysis.segmentByRests\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "Segmenter\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "class",
        "type": "Title"
    },
    {
        "text": "music21.analysis.segmentByRests.",
        "type": "Title"
    },
    {
        "text": "Segmenter",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "Given a work or part, returns a list of melodic segments or intervals.",
        "type": "ListItem"
    },
    {
        "text": "Segmenter methods",
        "type": "Title"
    },
    {
        "text": "classmethod",
        "type": "Title"
    },
    {
        "text": "Segmenter.",
        "type": "Title"
    },
    {
        "text": "getIntervalList",
        "type": "Title"
    },
    {
        "text": "workOrPart",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "Given a work or part, returns a list of intervals between contiguous notes.\nNB Uses .recurse() internally so\nif called on a work then returns a list of lists with one list per part.\n>>> example = converter.parse(\"tinyNotation: 4/4 E4 r F G A r g c r c\")\n>>> intList = analysis.segmentByRests.Segmenter.getIntervalList(example)\n>>> [x.name for x in intList]\n['M2', 'M2', 'P5']",
        "type": "ListItem"
    },
    {
        "text": "classmethod",
        "type": "Title"
    },
    {
        "text": "Segmenter.",
        "type": "Title"
    },
    {
        "text": "getSegmentsList",
        "type": "Title"
    },
    {
        "text": "workOrPart",
        "type": "Title"
    },
    {
        "text": "removeEmptyLists",
        "type": "Title"
    },
    {
        "text": "True",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "Segments a part by its rests (and clefs) and returns a list of lists where\neach sublist is one segment of contiguous notes. NB Uses .recurse() internally.\n>>> example = converter.parse(\"tinyNotation: C4 r D E r r F r G r A B r c\")\n>>> segments = analysis.segmentByRests.Segmenter.getSegmentsList(example)\n>>> segments\n[[<music21.note.Note C>],\n [<music21.note.Note D>, <music21.note.Note E>],\n [<music21.note.Note F>],\n [<music21.note.Note G>],\n [<music21.note.Note A>, <music21.note.Note B>],\n [<music21.note.Note C>]]",
        "type": "ListItem"
    },
    {
        "text": "Navigation",
        "type": "Title"
    },
    {
        "text": "index",
        "type": "ListItem"
    },
    {
        "text": "modules |",
        "type": "ListItem"
    },
    {
        "text": "next |",
        "type": "ListItem"
    },
    {
        "text": "previous |",
        "type": "ListItem"
    },
    {
        "text": "music21 \u00bb",
        "type": "ListItem"
    },
    {
        "text": "Module Reference \u00bb",
        "type": "ListItem"
    },
    {
        "text": "music21.analysis.segmentByRests",
        "type": "ListItem"
    },
    {
        "text": "\u00a9 Copyright 2006-2023 Michael Scott Asato Cuthbert.\n      Last updated on Jun 12, 2023.",
        "type": "NarrativeText"
    }
]