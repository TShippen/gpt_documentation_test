[
    {
        "text": "Navigation",
        "type": "Title"
    },
    {
        "text": "index",
        "type": "ListItem"
    },
    {
        "text": "modules |",
        "type": "ListItem"
    },
    {
        "text": "next |",
        "type": "ListItem"
    },
    {
        "text": "previous |",
        "type": "ListItem"
    },
    {
        "text": "music21 \u00bb",
        "type": "ListItem"
    },
    {
        "text": "Module Reference \u00bb",
        "type": "ListItem"
    },
    {
        "text": "music21.common.pathTools",
        "type": "ListItem"
    },
    {
        "text": "Previous topic",
        "type": "Title"
    },
    {
        "text": "music21.common.parallel",
        "type": "Title"
    },
    {
        "text": "Next topic",
        "type": "Title"
    },
    {
        "text": "music21.common.stringTools",
        "type": "Title"
    },
    {
        "text": "Table of Contents",
        "type": "Title"
    },
    {
        "text": "music21.common.pathTools\nFunctions\ncleanpath()\ngetCorpusContentDirs()\ngetCorpusFilePath()\ngetMetadataCacheFilePath()\ngetRootFilePath()\ngetSourceFilePath()\nrelativepath()",
        "type": "ListItem"
    },
    {
        "text": "Table of Contents",
        "type": "Title"
    },
    {
        "text": "About music21",
        "type": "ListItem"
    },
    {
        "text": "User's Guide",
        "type": "ListItem"
    },
    {
        "text": "Module Reference",
        "type": "ListItem"
    },
    {
        "text": "Installation",
        "type": "ListItem"
    },
    {
        "text": "Developer Reference",
        "type": "ListItem"
    },
    {
        "text": "Documentation and tests in progress",
        "type": "ListItem"
    },
    {
        "text": "Quick search",
        "type": "Title"
    },
    {
        "text": "This Page",
        "type": "Title"
    },
    {
        "text": "Show Source",
        "type": "ListItem"
    },
    {
        "text": "music21.common.pathTools\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "Functions\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "music21.common.pathTools.",
        "type": "Title"
    },
    {
        "text": "cleanpath",
        "type": "Title"
    },
    {
        "text": "path",
        "type": "Title"
    },
    {
        "text": "Path",
        "type": "Title"
    },
    {
        "text": "returnPathlib",
        "type": "Title"
    },
    {
        "text": "Literal[None]",
        "type": "Title"
    },
    {
        "text": "None",
        "type": "Title"
    },
    {
        "text": "\u2192 Path",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "music21.common.pathTools.",
        "type": "Title"
    },
    {
        "text": "cleanpath",
        "type": "Title"
    },
    {
        "text": "path",
        "type": "Title"
    },
    {
        "text": "str",
        "type": "Title"
    },
    {
        "text": "returnPathlib",
        "type": "Title"
    },
    {
        "text": "Literal[None]",
        "type": "Title"
    },
    {
        "text": "None",
        "type": "Title"
    },
    {
        "text": "\u2192 str",
        "type": "Title"
    },
    {
        "text": "music21.common.pathTools.",
        "type": "Title"
    },
    {
        "text": "cleanpath",
        "type": "Title"
    },
    {
        "text": "path",
        "type": "Title"
    },
    {
        "text": "str | Path",
        "type": "Title"
    },
    {
        "text": "returnPathlib",
        "type": "Title"
    },
    {
        "text": "Literal[True]",
        "type": "Title"
    },
    {
        "text": "\u2192 Path",
        "type": "Title"
    },
    {
        "text": "music21.common.pathTools.",
        "type": "Title"
    },
    {
        "text": "cleanpath",
        "type": "Title"
    },
    {
        "text": "path",
        "type": "Title"
    },
    {
        "text": "str | Path",
        "type": "Title"
    },
    {
        "text": "returnPathlib",
        "type": "Title"
    },
    {
        "text": "Literal[False]",
        "type": "Title"
    },
    {
        "text": "\u2192 str",
        "type": "Title"
    },
    {
        "text": "Normalizes the path by expanding ~user on Unix, ${var} environmental vars\n(is this a good idea?), expanding %name% on Windows, normalizing path names\n(Windows turns backslashes to forward slashes), and finally if that file\nis not an absolute path, turns it from a relative path to an absolute path.\nv5 \u2014 returnPathlib \u2014 None (default) does not convert. False, returns a string,\nTrue, returns a pathlib.Path.",
        "type": "ListItem"
    },
    {
        "text": "music21.common.pathTools.",
        "type": "Title"
    },
    {
        "text": "getCorpusContentDirs",
        "type": "Title"
    },
    {
        "text": "\u2192 list[str]",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "Get all dirs that are found in the CoreCorpus that contain content;\nthat is, exclude dirs that have code or other resources.\n>>> fp = common.getCorpusContentDirs()\n>>> fp  # this list will be fragile, depending on composition of dirs\n['airdsAirs', 'bach', 'beach', 'beethoven', 'chopin',\n 'ciconia', 'corelli', 'cpebach',\n 'demos', 'essenFolksong', 'handel', 'haydn', 'johnson_j_r', 'joplin', 'josquin',\n 'leadSheet', 'liliuokalani', 'luca', 'lusitano',\n 'miscFolk', 'monteverdi', 'mozart',\n 'nottingham-dataset',\n 'oneills1850', 'palestrina',\n 'ryansMammoth', 'schoenberg', 'schubert', 'schumann_clara', 'schumann_robert',\n 'theoryExercises', 'trecento', 'verdi', 'weber']\n\n\nMake sure that all corpus data has a directoryInformation tag in\nCoreCorpus.\n>>> cc = corpus.corpora.CoreCorpus()\n>>> failed = []\n>>> di = [d.directoryName for d in cc.directoryInformation]\n>>> for f in fp:\n...     if f not in di:\n...         failed.append(f)\n>>> failed\n[]",
        "type": "ListItem"
    },
    {
        "text": "music21.common.pathTools.",
        "type": "Title"
    },
    {
        "text": "getCorpusFilePath",
        "type": "Title"
    },
    {
        "text": "\u2192 Path",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "Get the stored music21 directory that contains the corpus metadata cache.\n>>> fp = common.getCorpusFilePath()\n>>> fp.name == 'corpus' and fp.parent.name == 'music21'\nTrue",
        "type": "ListItem"
    },
    {
        "text": "music21.common.pathTools.",
        "type": "Title"
    },
    {
        "text": "getMetadataCacheFilePath",
        "type": "Title"
    },
    {
        "text": "\u2192 Path",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "Get the stored music21 directory that contains the corpus metadata cache.\n>>> fp = common.getMetadataCacheFilePath()\n>>> fp.name == '_metadataCache' and fp.parent.name == 'corpus'\nTrue",
        "type": "ListItem"
    },
    {
        "text": "music21.common.pathTools.",
        "type": "Title"
    },
    {
        "text": "getRootFilePath",
        "type": "Title"
    },
    {
        "text": "\u2192 Path",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "Return the root directory for music21 \u2014 outside the music21 namespace\nwhich has directories such as \u009cdist\u009d, \u009cdocumentation\u009d, \u009cmusic21\u009d\n>>> fp = common.getRootFilePath()\n>>> fp\nPosixPath('/Users/florencePrice/git/music21')",
        "type": "ListItem"
    },
    {
        "text": "music21.common.pathTools.",
        "type": "Title"
    },
    {
        "text": "getSourceFilePath",
        "type": "Title"
    },
    {
        "text": "\u2192 Path",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "Get the music21 directory that contains source files such as note.py, etc.\nThis is not the same as the\noutermost package development directory.",
        "type": "ListItem"
    },
    {
        "text": "music21.common.pathTools.",
        "type": "Title"
    },
    {
        "text": "relativepath",
        "type": "Title"
    },
    {
        "text": "path",
        "type": "Title"
    },
    {
        "text": "StrOrPath",
        "type": "Title"
    },
    {
        "text": "start",
        "type": "Title"
    },
    {
        "text": "str | None",
        "type": "Title"
    },
    {
        "text": "None",
        "type": "Title"
    },
    {
        "text": "\u2192 StrOrPath | str",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "A cross-platform wrapper for os.path.relpath(), which returns path if\nunder Windows, otherwise returns the relative path of path.\nThis avoids problems under Windows when the current working directory is\non a different drive letter from path.",
        "type": "ListItem"
    },
    {
        "text": "Navigation",
        "type": "Title"
    },
    {
        "text": "index",
        "type": "ListItem"
    },
    {
        "text": "modules |",
        "type": "ListItem"
    },
    {
        "text": "next |",
        "type": "ListItem"
    },
    {
        "text": "previous |",
        "type": "ListItem"
    },
    {
        "text": "music21 \u00bb",
        "type": "ListItem"
    },
    {
        "text": "Module Reference \u00bb",
        "type": "ListItem"
    },
    {
        "text": "music21.common.pathTools",
        "type": "ListItem"
    },
    {
        "text": "\u00a9 Copyright 2006-2023 Michael Scott Asato Cuthbert.\n      Last updated on Jun 12, 2023.",
        "type": "NarrativeText"
    }
]