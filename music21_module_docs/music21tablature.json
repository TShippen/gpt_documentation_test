[
    {
        "text": "Navigation",
        "type": "Title"
    },
    {
        "text": "index",
        "type": "ListItem"
    },
    {
        "text": "modules |",
        "type": "ListItem"
    },
    {
        "text": "next |",
        "type": "ListItem"
    },
    {
        "text": "previous |",
        "type": "ListItem"
    },
    {
        "text": "music21 \u00bb",
        "type": "ListItem"
    },
    {
        "text": "Module Reference \u00bb",
        "type": "ListItem"
    },
    {
        "text": "music21.tablature",
        "type": "ListItem"
    },
    {
        "text": "Previous topic",
        "type": "Title"
    },
    {
        "text": "music21.style",
        "type": "Title"
    },
    {
        "text": "Next topic",
        "type": "Title"
    },
    {
        "text": "music21.tempo",
        "type": "Title"
    },
    {
        "text": "Table of Contents",
        "type": "Title"
    },
    {
        "text": "music21.tablature\nBassGuitarFretBoard\nBassGuitarFretBoard\n\n\nChordWithFretBoard\nChordWithFretBoard\nChordWithFretBoard.getFretNotesFromFigure()\n\n\n\n\nFirstFret\nFirstFret\n\n\nFretBoard\nFretBoard\nFretBoard.fretNotesLowestFirst()\nFretBoard.getFretNoteByString()\nFretBoard.getPitches()\n\n\n\n\nFretNote\nFretNote\n\n\nGuitarFretBoard\nGuitarFretBoard\n\n\nMandolinFretBoard\nMandolinFretBoard\n\n\nUkeleleFretBoard\nUkeleleFretBoard",
        "type": "ListItem"
    },
    {
        "text": "Table of Contents",
        "type": "Title"
    },
    {
        "text": "About music21",
        "type": "ListItem"
    },
    {
        "text": "User's Guide",
        "type": "ListItem"
    },
    {
        "text": "Module Reference",
        "type": "ListItem"
    },
    {
        "text": "Installation",
        "type": "ListItem"
    },
    {
        "text": "Developer Reference",
        "type": "ListItem"
    },
    {
        "text": "Documentation and tests in progress",
        "type": "ListItem"
    },
    {
        "text": "Quick search",
        "type": "Title"
    },
    {
        "text": "This Page",
        "type": "Title"
    },
    {
        "text": "Show Source",
        "type": "ListItem"
    },
    {
        "text": "music21.tablature\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "Music21 representation of FretNote and FretBoard objects.",
        "type": "Title"
    },
    {
        "text": "TODO:\nChord from Figure\nChord from FretBoard Object with tuning.",
        "type": "Title"
    },
    {
        "text": "BassGuitarFretBoard\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "class",
        "type": "Title"
    },
    {
        "text": "music21.tablature.",
        "type": "Title"
    },
    {
        "text": "BassGuitarFretBoard",
        "type": "Title"
    },
    {
        "text": "fretNotes",
        "type": "Title"
    },
    {
        "text": "None",
        "type": "Title"
    },
    {
        "text": "displayFrets",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "A four-string fretboard tuned to E A D G",
        "type": "ListItem"
    },
    {
        "text": "BassGuitarFretBoard bases",
        "type": "Title"
    },
    {
        "text": "FretBoard",
        "type": "ListItem"
    },
    {
        "text": "ProtoM21Object",
        "type": "ListItem"
    },
    {
        "text": "BassGuitarFretBoard read-only properties",
        "type": "Title"
    },
    {
        "text": "Read-only properties inherited from ProtoM21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "classSet classes",
        "type": "Table"
    },
    {
        "text": "BassGuitarFretBoard methods",
        "type": "Title"
    },
    {
        "text": "Methods inherited from FretBoard:",
        "type": "NarrativeText"
    },
    {
        "text": "fretNotesLowestFirst() getFretNoteByString() getPitches()",
        "type": "Table"
    },
    {
        "text": "Methods inherited from ProtoM21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "isClassOrSubclass()",
        "type": "Table"
    },
    {
        "text": "ChordWithFretBoard\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "class",
        "type": "Title"
    },
    {
        "text": "music21.tablature.",
        "type": "Title"
    },
    {
        "text": "ChordWithFretBoard",
        "type": "Title"
    },
    {
        "text": "figure",
        "type": "Title"
    },
    {
        "text": "None",
        "type": "Title"
    },
    {
        "text": "numStrings",
        "type": "Title"
    },
    {
        "text": "fretNotes",
        "type": "Title"
    },
    {
        "text": "None",
        "type": "Title"
    },
    {
        "text": "displayFrets",
        "type": "Title"
    },
    {
        "text": "**",
        "type": "UncategorizedText"
    },
    {
        "text": "keywords",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "Music21Object subclass that combines a ChordSymbol with a FretBoard.\nTuning must be set!\n>>> fn4 = tablature.FretNote(string=4, fret=0)\n>>> fn3 = tablature.FretNote(string=3, fret=2, fingering=2)\n>>> fn2 = tablature.FretNote(string=2, fret=3, fingering=3)\n>>> fn1 = tablature.FretNote(string=1, fret=2, fingering=4)\n>>> cwf = tablature.ChordWithFretBoard('Dm', fretNotes=[fn1, fn2, fn3, fn4])",
        "type": "ListItem"
    },
    {
        "text": "ChordWithFretBoard bases",
        "type": "Title"
    },
    {
        "text": "ChordSymbol",
        "type": "ListItem"
    },
    {
        "text": "Harmony",
        "type": "ListItem"
    },
    {
        "text": "Chord",
        "type": "ListItem"
    },
    {
        "text": "ChordBase",
        "type": "ListItem"
    },
    {
        "text": "NotRest",
        "type": "ListItem"
    },
    {
        "text": "GeneralNote",
        "type": "ListItem"
    },
    {
        "text": "Music21Object",
        "type": "ListItem"
    },
    {
        "text": "FretBoard",
        "type": "ListItem"
    },
    {
        "text": "ProtoM21Object",
        "type": "ListItem"
    },
    {
        "text": "ChordWithFretBoard read-only properties",
        "type": "Title"
    },
    {
        "text": "Read-only properties inherited from Chord:",
        "type": "NarrativeText"
    },
    {
        "text": "chordTablesAddress commonName fifth forteClass forteClassNumber forteClassTn forteClassTnI fullName hasZRelation intervalVector intervalVectorString isPrimeFormInversion multisetCardinality normalOrder normalOrderString orderedPitchClasses orderedPitchClassesString pitchClassCardinality pitchClasses pitchedCommonName primeForm primeFormString quality scaleDegrees seventh third",
        "type": "Table"
    },
    {
        "text": "Read-only properties inherited from Music21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "beat beatDuration beatStr beatStrength hasEditorialInformation hasStyleInformation measureNumber",
        "type": "Table"
    },
    {
        "text": "Read-only properties inherited from ProtoM21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "classSet classes",
        "type": "Table"
    },
    {
        "text": "ChordWithFretBoard read/write properties",
        "type": "Title"
    },
    {
        "text": "Read/write properties inherited from Harmony:",
        "type": "NarrativeText"
    },
    {
        "text": "figure key romanNumeral writeAsChord",
        "type": "Table"
    },
    {
        "text": "Read/write properties inherited from Chord:",
        "type": "NarrativeText"
    },
    {
        "text": "duration notes pitchNames pitches",
        "type": "Table"
    },
    {
        "text": "Read/write properties inherited from ChordBase:",
        "type": "NarrativeText"
    },
    {
        "text": "tie volume",
        "type": "Table"
    },
    {
        "text": "Read/write properties inherited from NotRest:",
        "type": "NarrativeText"
    },
    {
        "text": "notehead noteheadFill noteheadParenthesis stemDirection storedInstrument",
        "type": "Table"
    },
    {
        "text": "Read/write properties inherited from GeneralNote:",
        "type": "NarrativeText"
    },
    {
        "text": "lyric",
        "type": "Table"
    },
    {
        "text": "Read/write properties inherited from Music21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "activeSite derivation editorial id offset priority quarterLength seconds style",
        "type": "Table"
    },
    {
        "text": "ChordWithFretBoard methods",
        "type": "Title"
    },
    {
        "text": "ChordWithFretBoard.",
        "type": "Title"
    },
    {
        "text": "getFretNotesFromFigure",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "TODO:\nGiven a chord with fret Figure, getFretNotesFromFigure returns each FretNote object\nwithin it.",
        "type": "ListItem"
    },
    {
        "text": "Methods inherited from ChordSymbol:",
        "type": "NarrativeText"
    },
    {
        "text": "findFigure() inversionIsValid() transpose()",
        "type": "Table"
    },
    {
        "text": "Methods inherited from Harmony:",
        "type": "NarrativeText"
    },
    {
        "text": "addChordStepModification() getChordStepModifications()",
        "type": "Table"
    },
    {
        "text": "Methods inherited from Chord:",
        "type": "NarrativeText"
    },
    {
        "text": "__eq__() __getitem__() add() annotateIntervals() areZRelations() bass() canBeDominantV() canBeTonic() closedPosition() containsSeventh() containsTriad() formatVectorString() geometricNormalForm() getChordStep() getColor() getNotehead() getNoteheadFill() getStemDirection() getTie() getVolume() getZRelation() hasAnyEnharmonicSpelledPitches() hasAnyRepeatedDiatonicNote() hasRepeatedChordStep() intervalFromChordStep() inversion() inversionName() inversionText() isAugmentedSixth() isAugmentedTriad() isConsonant() isDiminishedSeventh() isDiminishedTriad() isDominantSeventh() isFalseDiminishedSeventh() isFrenchAugmentedSixth() isGermanAugmentedSixth() isHalfDiminishedSeventh() isIncompleteMajorTriad() isIncompleteMinorTriad() isItalianAugmentedSixth() isMajorTriad() isMinorTriad() isNinth() isSeventh() isSeventhOfType() isSwissAugmentedSixth() isTranspositionallySymmetrical() isTriad() removeRedundantPitchClasses() removeRedundantPitchNames() removeRedundantPitches() root() semiClosedPosition() semitonesFromChordStep() setColor() setNotehead() setNoteheadFill() setStemDirection() setTie() setVolume() simplifyEnharmonics() sortAscending() sortChromaticAscending() sortDiatonicAscending() sortFrequencyAscending()",
        "type": "Table"
    },
    {
        "text": "Methods inherited from ChordBase:",
        "type": "NarrativeText"
    },
    {
        "text": "hasComponentVolumes() remove() setVolumes()",
        "type": "Table"
    },
    {
        "text": "Methods inherited from NotRest:",
        "type": "NarrativeText"
    },
    {
        "text": "getInstrument() hasVolumeInformation()",
        "type": "Table"
    },
    {
        "text": "Methods inherited from GeneralNote:",
        "type": "NarrativeText"
    },
    {
        "text": "addLyric() augmentOrDiminish() getGrace() insertLyric()",
        "type": "Table"
    },
    {
        "text": "Methods inherited from Music21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "clearCache() containerHierarchy() contextSites() getAllContextsByClass() getContextByClass() getOffsetBySite() getOffsetInHierarchy() getSpannerSites() informSites() mergeAttributes() next() previous() purgeLocations() purgeOrphans() setOffsetBySite() show() sortTuple() splitAtDurations() splitAtQuarterLength() splitByQuarterLengths() write()",
        "type": "Table"
    },
    {
        "text": "Methods inherited from FretBoard:",
        "type": "NarrativeText"
    },
    {
        "text": "fretNotesLowestFirst() getFretNoteByString() getPitches()",
        "type": "Table"
    },
    {
        "text": "Methods inherited from ProtoM21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "isClassOrSubclass()",
        "type": "Table"
    },
    {
        "text": "ChordWithFretBoard instance variables",
        "type": "Title"
    },
    {
        "text": "Instance variables inherited from Chord:",
        "type": "NarrativeText"
    },
    {
        "text": "beams isChord isNote isRest",
        "type": "Table"
    },
    {
        "text": "Instance variables inherited from ChordBase:",
        "type": "NarrativeText"
    },
    {
        "text": "beams isNote isRest",
        "type": "Table"
    },
    {
        "text": "Instance variables inherited from NotRest:",
        "type": "NarrativeText"
    },
    {
        "text": "beams",
        "type": "Table"
    },
    {
        "text": "Instance variables inherited from GeneralNote:",
        "type": "NarrativeText"
    },
    {
        "text": "articulations expressions isChord lyrics",
        "type": "Table"
    },
    {
        "text": "Instance variables inherited from Music21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "classSortOrder groups isStream sites",
        "type": "Table"
    },
    {
        "text": "FirstFret\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "class",
        "type": "Title"
    },
    {
        "text": "music21.tablature.",
        "type": "Title"
    },
    {
        "text": "FirstFret",
        "type": "Title"
    },
    {
        "text": "fretNum",
        "type": "Title"
    },
    {
        "text": "location",
        "type": "Title"
    },
    {
        "text": "'right'",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "FirstFretInfo returns the information regarding the first fret utilized in a\ngiven chord position.",
        "type": "ListItem"
    },
    {
        "text": "FretBoard\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "class",
        "type": "Title"
    },
    {
        "text": "music21.tablature.",
        "type": "Title"
    },
    {
        "text": "FretBoard",
        "type": "Title"
    },
    {
        "text": "numStrings",
        "type": "Title"
    },
    {
        "text": "fretNotes",
        "type": "Title"
    },
    {
        "text": "None",
        "type": "Title"
    },
    {
        "text": "displayFrets",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "A FretBoard represents a displayed fretboard (i.e. used in chord symbols).\nTo be displayed, a fretboard requires a tuning system, defined by the fretted instrument\nclasses defined.\n>>> fn1 = tablature.FretNote(string=3, fret=2, fingering=1)\n>>> fn2 = tablature.FretNote(string=2, fret=3, fingering=3)\n>>> fn3 = tablature.FretNote(string=1, fret=2, fingering=2)\n>>> fb = tablature.FretBoard(6, fretNotes=[fn1, fn2, fn3], displayFrets=5)\n>>> fb.numStrings\n6\n>>> fb\n<music21.tablature.FretBoard 6 strings, 3 notes, 5 frets>\n>>> len(fb.fretNotes)\n3\n>>> fb.fretNotes[0]\n<music21.tablature.FretNote 3rd string, 2nd fret, 1st finger>\n\n\n>>> fb.getFretNoteByString(2)\n<music21.tablature.FretNote 2nd string, 3rd fret, 3rd finger>",
        "type": "ListItem"
    },
    {
        "text": "FretBoard bases",
        "type": "Title"
    },
    {
        "text": "ProtoM21Object",
        "type": "ListItem"
    },
    {
        "text": "FretBoard read-only properties",
        "type": "Title"
    },
    {
        "text": "Read-only properties inherited from ProtoM21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "classSet classes",
        "type": "Table"
    },
    {
        "text": "FretBoard methods",
        "type": "Title"
    },
    {
        "text": "FretBoard.",
        "type": "Title"
    },
    {
        "text": "fretNotesLowestFirst",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "Returns a list of FretNotes in lowest to highest string order.\n>>> firstNote = tablature.FretNote(string=2, fret=3, fingering=4)\n>>> secondNote = tablature.FretNote(string=3, fret=3, fingering=3)\n>>> thirdNote = tablature.FretNote(string=1, fret=3, fingering=3)\n>>> myFretBoard = tablature.FretBoard(6, fretNotes=[firstNote, secondNote, thirdNote])\n>>> for thisFretNote in myFretBoard.fretNotesLowestFirst():\n...    print(thisFretNote)\n<music21.tablature.FretNote 3rd string, 3rd fret, 3rd finger>\n<music21.tablature.FretNote 2nd string, 3rd fret, 4th finger>\n<music21.tablature.FretNote 1st string, 3rd fret, 3rd finger>",
        "type": "ListItem"
    },
    {
        "text": "FretBoard.",
        "type": "Title"
    },
    {
        "text": "getFretNoteByString",
        "type": "NarrativeText"
    },
    {
        "text": "requestedString",
        "type": "NarrativeText"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "Returns FretNote object on a given string or None if there are none.\n>>> firstNote = tablature.FretNote(string=6, fret=3, fingering=4)\n>>> secondNote = tablature.FretNote(string=2, fret=3, fingering=3)\n>>> myFretBoard = tablature.FretBoard(6, fretNotes=[firstNote, secondNote])\n>>> myFretBoard.getFretNoteByString(6)\n<music21.tablature.FretNote 6th string, 3rd fret, 4th finger>\n\n\n>>> myFretBoard.getFretNoteByString(2)\n<music21.tablature.FretNote 2nd string, 3rd fret, 3rd finger>\n\n\n>>> myFretBoard.getFretNoteByString(9) is None\nTrue",
        "type": "ListItem"
    },
    {
        "text": "FretBoard.",
        "type": "Title"
    },
    {
        "text": "getPitches",
        "type": "Title"
    },
    {
        "text": "\u2192 list[None | music21.pitch.Pitch]",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "Returns a list of all the pitches (or None for each) given the FretNote information. This\nrequires a tuning to be set.\n>>> firstNote = tablature.FretNote(string=4, fret=3, fingering=3)\n>>> secondNote = tablature.FretNote(string=2, fret=1, fingering=1)\n>>> gfb = tablature.GuitarFretBoard(fretNotes=[firstNote, secondNote])\n>>> gfb.getPitches()\n[None, None, <music21.pitch.Pitch F3>, None, <music21.pitch.Pitch C4>, None]\n\n\nWhat if the User provides an empty FretBoard?\n>>> gfb2 = tablature.GuitarFretBoard(fretNotes=[])\n>>> gfb2.getPitches()\n[None, None, None, None, None, None]\nWorks for other stringed instruments, as long as the tuning is included (see below).\n>>> tablature.UkeleleFretBoard().numStrings\n4\n>>> uke = tablature.UkeleleFretBoard(fretNotes=[firstNote, secondNote])\n>>> uke.getPitches()\n[<music21.pitch.Pitch B-4>, None, <music21.pitch.Pitch F4>, None]",
        "type": "ListItem"
    },
    {
        "text": "Methods inherited from ProtoM21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "isClassOrSubclass()",
        "type": "Table"
    },
    {
        "text": "FretNote\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "class",
        "type": "Title"
    },
    {
        "text": "music21.tablature.",
        "type": "Title"
    },
    {
        "text": "FretNote",
        "type": "Title"
    },
    {
        "text": "string",
        "type": "Title"
    },
    {
        "text": "None",
        "type": "Title"
    },
    {
        "text": "fret",
        "type": "Title"
    },
    {
        "text": "None",
        "type": "Title"
    },
    {
        "text": "fingering",
        "type": "NarrativeText"
    },
    {
        "text": "None",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "A FretNote represents a note on a Fretboard, where each string should\nbe fingered (or not).\n>>> fn = tablature.FretNote(3, 4, 1)\n>>> fn\n<music21.tablature.FretNote 3rd string, 4th fret, 1st finger>\n\n\n>>> fn.string\n3\n>>> fn.fret\n4\n>>> fn.fingering\n1\n>>> fn.displayFingerNumber\nTrue\n\n\n>>> fnStupid = tablature.FretNote()\n>>> fnStupid.string is None\nTrue",
        "type": "ListItem"
    },
    {
        "text": "FretNote bases",
        "type": "Title"
    },
    {
        "text": "ProtoM21Object",
        "type": "ListItem"
    },
    {
        "text": "FretNote read-only properties",
        "type": "Title"
    },
    {
        "text": "Read-only properties inherited from ProtoM21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "classSet classes",
        "type": "Table"
    },
    {
        "text": "FretNote methods",
        "type": "Title"
    },
    {
        "text": "Methods inherited from ProtoM21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "isClassOrSubclass()",
        "type": "Table"
    },
    {
        "text": "GuitarFretBoard\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "class",
        "type": "Title"
    },
    {
        "text": "music21.tablature.",
        "type": "Title"
    },
    {
        "text": "GuitarFretBoard",
        "type": "Title"
    },
    {
        "text": "fretNotes",
        "type": "Title"
    },
    {
        "text": "None",
        "type": "Title"
    },
    {
        "text": "displayFrets",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "A six-string fretboard tuned to E A D G B E.",
        "type": "ListItem"
    },
    {
        "text": "GuitarFretBoard bases",
        "type": "Title"
    },
    {
        "text": "FretBoard",
        "type": "ListItem"
    },
    {
        "text": "ProtoM21Object",
        "type": "ListItem"
    },
    {
        "text": "GuitarFretBoard read-only properties",
        "type": "Title"
    },
    {
        "text": "Read-only properties inherited from ProtoM21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "classSet classes",
        "type": "Table"
    },
    {
        "text": "GuitarFretBoard methods",
        "type": "Title"
    },
    {
        "text": "Methods inherited from FretBoard:",
        "type": "NarrativeText"
    },
    {
        "text": "fretNotesLowestFirst() getFretNoteByString() getPitches()",
        "type": "Table"
    },
    {
        "text": "Methods inherited from ProtoM21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "isClassOrSubclass()",
        "type": "Table"
    },
    {
        "text": "MandolinFretBoard\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "class",
        "type": "Title"
    },
    {
        "text": "music21.tablature.",
        "type": "Title"
    },
    {
        "text": "MandolinFretBoard",
        "type": "Title"
    },
    {
        "text": "fretNotes",
        "type": "Title"
    },
    {
        "text": "None",
        "type": "Title"
    },
    {
        "text": "displayFrets",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "A four-string fretboard tuned to G D A E",
        "type": "ListItem"
    },
    {
        "text": "MandolinFretBoard bases",
        "type": "Title"
    },
    {
        "text": "FretBoard",
        "type": "ListItem"
    },
    {
        "text": "ProtoM21Object",
        "type": "ListItem"
    },
    {
        "text": "MandolinFretBoard read-only properties",
        "type": "Title"
    },
    {
        "text": "Read-only properties inherited from ProtoM21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "classSet classes",
        "type": "Table"
    },
    {
        "text": "MandolinFretBoard methods",
        "type": "Title"
    },
    {
        "text": "Methods inherited from FretBoard:",
        "type": "NarrativeText"
    },
    {
        "text": "fretNotesLowestFirst() getFretNoteByString() getPitches()",
        "type": "Table"
    },
    {
        "text": "Methods inherited from ProtoM21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "isClassOrSubclass()",
        "type": "Table"
    },
    {
        "text": "UkeleleFretBoard\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "class",
        "type": "Title"
    },
    {
        "text": "music21.tablature.",
        "type": "Title"
    },
    {
        "text": "UkeleleFretBoard",
        "type": "Title"
    },
    {
        "text": "fretNotes",
        "type": "Title"
    },
    {
        "text": "None",
        "type": "Title"
    },
    {
        "text": "displayFrets",
        "type": "Title"
    },
    {
        "text": "\u00c2\u00b6",
        "type": "UncategorizedText"
    },
    {
        "text": "A four-string fretboard tuned to G C E A",
        "type": "ListItem"
    },
    {
        "text": "UkeleleFretBoard bases",
        "type": "Title"
    },
    {
        "text": "FretBoard",
        "type": "ListItem"
    },
    {
        "text": "ProtoM21Object",
        "type": "ListItem"
    },
    {
        "text": "UkeleleFretBoard read-only properties",
        "type": "Title"
    },
    {
        "text": "Read-only properties inherited from ProtoM21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "classSet classes",
        "type": "Table"
    },
    {
        "text": "UkeleleFretBoard methods",
        "type": "Title"
    },
    {
        "text": "Methods inherited from FretBoard:",
        "type": "NarrativeText"
    },
    {
        "text": "fretNotesLowestFirst() getFretNoteByString() getPitches()",
        "type": "Table"
    },
    {
        "text": "Methods inherited from ProtoM21Object:",
        "type": "NarrativeText"
    },
    {
        "text": "isClassOrSubclass()",
        "type": "Table"
    },
    {
        "text": "Navigation",
        "type": "Title"
    },
    {
        "text": "index",
        "type": "ListItem"
    },
    {
        "text": "modules |",
        "type": "ListItem"
    },
    {
        "text": "next |",
        "type": "ListItem"
    },
    {
        "text": "previous |",
        "type": "ListItem"
    },
    {
        "text": "music21 \u00bb",
        "type": "ListItem"
    },
    {
        "text": "Module Reference \u00bb",
        "type": "ListItem"
    },
    {
        "text": "music21.tablature",
        "type": "ListItem"
    },
    {
        "text": "\u00a9 Copyright 2006-2023 Michael Scott Asato Cuthbert.\n      Last updated on Jun 12, 2023.",
        "type": "NarrativeText"
    }
]