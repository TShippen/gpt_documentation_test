[
    {
        "text": "Navigation",
        "type": "Title"
    },
    {
        "text": "index",
        "type": "ListItem"
    },
    {
        "text": "modules |",
        "type": "ListItem"
    },
    {
        "text": "next |",
        "type": "ListItem"
    },
    {
        "text": "previous |",
        "type": "ListItem"
    },
    {
        "text": "music21 \u00bb",
        "type": "ListItem"
    },
    {
        "text": "User's Guide \u00bb",
        "type": "ListItem"
    },
    {
        "text": "User's Guide, Chapter 3: Pitches, Durations, and Notes again",
        "type": "ListItem"
    },
    {
        "text": "Previous topic",
        "type": "Title"
    },
    {
        "text": "User's Guide, Chapter 2: Notes",
        "type": "Title"
    },
    {
        "text": "Next topic",
        "type": "Title"
    },
    {
        "text": "User's Guide, Chapter 4: Lists, Streams (I) and Output",
        "type": "Title"
    },
    {
        "text": "Table of Contents",
        "type": "Title"
    },
    {
        "text": "User's Guide, Chapter 3: Pitches, Durations, and Notes again\nThe Pitch object\nCarving time with Duration objects\nBack to Notes",
        "type": "ListItem"
    },
    {
        "text": "Table of Contents",
        "type": "Title"
    },
    {
        "text": "About music21",
        "type": "ListItem"
    },
    {
        "text": "User's Guide\nUser's Guide: Table of Contents\nUser's Guide, Chapter 1: Installing and Getting Started with music21\nUser's Guide, Chapter 2: Notes\nUser's Guide, Chapter 3: Pitches, Durations, and Notes again\nUser's Guide, Chapter 4: Lists, Streams (I) and Output\nUser's Guide, Chapter 5: Lists of Lists, Functions, and Recursion\nUser's Guide, Chapter 6: Streams (II): Hierarchies, Recursion, and Flattening\nUser's Guide, Chapter 7: Chords\nUser's Guide, Chapter 8: Installing MusicXML Readers and File Formats (1)\nUser's Guide, Chapter 9: Chordify\nUser's Guide, Chapter 10: Examples 1\nUser's Guide, Chapter 11: Corpus Searching\nUser's Guide, Chapter 12: Getting Back to Basics: The Music21Object\nUser's Guide, Chapter 13: More Music21Object Attributes and Properties\nUser's Guide: Chapter 14: Time Signatures and Beats\nUser's Guide, Chapter 15: Keys and KeySignatures\nUser's Guide, Chapter 16: TinyNotation\nUser's Guide: Chapter 17: Derivations\nUser's Guide: Chapter 18: Intervals\nUser's Guide, Chapter 19: Advanced Durations (Complex and Tuplets)\nUser's Guide, Chapter 20: Examples 2\nUser's Guide, Chapter 21: Ordering and Sorting of Stream Elements\nUser's Guide, Chapter 22: Graphing and plotting\nUser's Guide, Chapter 23: Roman Numeral Analysis\nUser's Guide, Chapter 24: Configuring Environment Settings\nUser's Guide, Chapter 25: Post-Tonal Tools (1)\nUser's Guide, Chapter 26: Stream Iteration and Filtering\nUser's Guide, Chapter 27: Grace Notes\nUser's Guide, Chapter 28: Lyric Searching\nUser's Guide, Chapter 29: Spanners 1 (Slurs)\nUser's Guide, Chapter 30: Examples 3\nUser's Guide, Chapter 31: Clefs, Ties, and Beams\nUser's Guide, Chapter 32: Articulations\nUser's Guide, Chapter 44: Advanced Graphing (Axes, Plots, and Graphs)\nUser's Guide, Chapter 53: Advanced Corpus and Metadata Searching\nUser's Guide, Chapter 54: Extending Converter with New Formats\nUser's Guide, Chapter 55: Advanced Meter Topics\nUser's Guide, Chapter 58: Understanding Sites and Contexts\nUser's Guide, Chapter 61: TimespanTrees and Verticalities",
        "type": "ListItem"
    },
    {
        "text": "Module Reference",
        "type": "ListItem"
    },
    {
        "text": "Installation",
        "type": "ListItem"
    },
    {
        "text": "Developer Reference",
        "type": "ListItem"
    },
    {
        "text": "Documentation and tests in progress",
        "type": "ListItem"
    },
    {
        "text": "Quick search",
        "type": "Title"
    },
    {
        "text": "This Page",
        "type": "Title"
    },
    {
        "text": "Show Source",
        "type": "ListItem"
    },
    {
        "text": "User's Guide, Chapter 3: Pitches, Durations, and Notes again\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "Now that you've made a couple of Note objects, it's time to dig a\nlittle deeper into what makes a Note really a Note, namely,\nmusic21.pitch, and music21.duration objects.",
        "type": "NarrativeText"
    },
    {
        "text": "The Pitch object\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "Note",
        "type": "Title"
    },
    {
        "text": "Pitch objects will be a breeze. Just like how\nthe",
        "type": "NarrativeText"
    },
    {
        "text": "Note",
        "type": "Title"
    },
    {
        "text": "note",
        "type": "Title"
    },
    {
        "text": "Pitch",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "Let's create a Pitch. Like we did with Notes, just class the\nclass with a note name, such as B with the optional symbols for\nsharp or flat, (# or - respectively).",
        "type": "NarrativeText"
    },
    {
        "text": "You can put an octave number after the name (4 = low treble clef), but\nyou don't have to:",
        "type": "NarrativeText"
    },
    {
        "text": "from",
        "type": "Title"
    },
    {
        "text": "music21",
        "type": "Title"
    },
    {
        "text": "import",
        "type": "Title"
    },
    {
        "text": "p1",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "Pitch",
        "type": "Title"
    },
    {
        "text": "'b-4'",
        "type": "UncategorizedText"
    },
    {
        "text": "Here we'll use a more abstract variable name, p1 for our first\nPitch, just in case we change the pitch later (via .transpose()\nor something else).",
        "type": "NarrativeText"
    },
    {
        "text": "Just like we saw with Notes there are a lot of attributes (a.k.a.\nproperties; we'll use the term interchangeably for a bit before we talk\nabout the difference) and methods that describe and change pitches. The\nfirst three will be old hat from Note objects:",
        "type": "NarrativeText"
    },
    {
        "text": "p1",
        "type": "Title"
    },
    {
        "text": "octave",
        "type": "Title"
    },
    {
        "text": "p1",
        "type": "Title"
    },
    {
        "text": "pitchClass",
        "type": "Title"
    },
    {
        "text": "10",
        "type": "UncategorizedText"
    },
    {
        "text": "p1",
        "type": "Title"
    },
    {
        "text": "name",
        "type": "Title"
    },
    {
        "text": "'B-'",
        "type": "UncategorizedText"
    },
    {
        "text": "p1",
        "type": "Title"
    },
    {
        "text": "accidental",
        "type": "Title"
    },
    {
        "text": "alter",
        "type": "Title"
    },
    {
        "text": "Here are two more that you can use. The first is pretty\nself-explanatory. The second gives the value of the Pitch in the\nolder, \u009cMIDI\u009d representation that is still in use today. It's a number\nbetween 0 and 127 where middle C (C4) is 60 and C#4/Db4 is 61, B3 is 59,\netc.",
        "type": "ListItem"
    },
    {
        "text": "1.0",
        "type": "UncategorizedText"
    },
    {
        "text": "Here are two more that you can use. The first is pretty\nself-explanatory. The second gives the value of the Pitch in the\nolder, \u009cMIDI\u009d representation that is still in use today. It's a number\nbetween 0 and 127 where middle C (C4) is 60 and C#4/Db4 is 61, B3 is 59,\netc.",
        "type": "NarrativeText"
    },
    {
        "text": "p1",
        "type": "Title"
    },
    {
        "text": "nameWithOctave",
        "type": "Title"
    },
    {
        "text": "'B-4'",
        "type": "UncategorizedText"
    },
    {
        "text": "p1",
        "type": "Title"
    },
    {
        "text": "midi",
        "type": "Title"
    },
    {
        "text": "70",
        "type": "UncategorizedText"
    },
    {
        "text": "Most of these attributes can be changed (they are \u009csettable properties\u009d\nin Python speak).",
        "type": "NarrativeText"
    },
    {
        "text": "When an attribute is set, the Pitch object changes whatever is\nnecessary to reflect the new value:",
        "type": "NarrativeText"
    },
    {
        "text": "p1",
        "type": "Title"
    },
    {
        "text": "name",
        "type": "Title"
    },
    {
        "text": "'d#'",
        "type": "UncategorizedText"
    },
    {
        "text": "p1",
        "type": "Title"
    },
    {
        "text": "octave",
        "type": "Title"
    },
    {
        "text": "p1",
        "type": "Title"
    },
    {
        "text": "nameWithOctave",
        "type": "Title"
    },
    {
        "text": "'D#3'",
        "type": "UncategorizedText"
    },
    {
        "text": "And our familiar .transpose() method also appears on Pitch as\nwell. Remember that p1 is now a D#:",
        "type": "NarrativeText"
    },
    {
        "text": "p2",
        "type": "Title"
    },
    {
        "text": "p1",
        "type": "Title"
    },
    {
        "text": "transpose",
        "type": "Title"
    },
    {
        "text": "'M7'",
        "type": "UncategorizedText"
    },
    {
        "text": "p2",
        "type": "Title"
    },
    {
        "text": "music21",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "Pitch",
        "type": "Title"
    },
    {
        "text": "##4>",
        "type": "UncategorizedText"
    },
    {
        "text": "Notice that at the command line, just printing the variable name gives\nyou the representation <music21.pitch.Pitch C##4>. You can also get\nthis by typing repr(p2).",
        "type": "NarrativeText"
    },
    {
        "text": "Pitch",
        "type": "Title"
    },
    {
        "text": "Notes",
        "type": "Title"
    },
    {
        "text": "Note",
        "type": "Title"
    },
    {
        "text": "Pitch",
        "type": "Title"
    },
    {
        "text": "note.Note",
        "type": "Title"
    },
    {
        "text": "note.Note.pitch",
        "type": "Title"
    },
    {
        "text": "csharp",
        "type": "Title"
    },
    {
        "text": "note",
        "type": "Title"
    },
    {
        "text": "Note",
        "type": "Title"
    },
    {
        "text": "'C#4'",
        "type": "UncategorizedText"
    },
    {
        "text": "csharp",
        "type": "Title"
    },
    {
        "text": "name",
        "type": "Title"
    },
    {
        "text": "'C#'",
        "type": "UncategorizedText"
    },
    {
        "text": "csharp",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "name",
        "type": "Title"
    },
    {
        "text": "'C#'",
        "type": "UncategorizedText"
    },
    {
        "text": "csharp",
        "type": "Title"
    },
    {
        "text": "octave",
        "type": "Title"
    },
    {
        "text": "csharp",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "octave",
        "type": "Title"
    },
    {
        "text": "But pitch objects have a lot more to offer for more technical working,\nfor instance, Pitch objects know their names in Spanish:",
        "type": "NarrativeText"
    },
    {
        "text": "csharp",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "spanish",
        "type": "Title"
    },
    {
        "text": "'do sostenido'",
        "type": "Title"
    },
    {
        "text": "Notes don't:",
        "type": "NarrativeText"
    },
    {
        "text": "csharp",
        "type": "Title"
    },
    {
        "text": "spanish",
        "type": "Title"
    },
    {
        "text": "---------------------------------------------------------------------------",
        "type": "UncategorizedText"
    },
    {
        "text": "AttributeError",
        "type": "Title"
    },
    {
        "text": "Traceback",
        "type": "Title"
    },
    {
        "text": "most",
        "type": "Title"
    },
    {
        "text": "recent",
        "type": "Title"
    },
    {
        "text": "call",
        "type": "Title"
    },
    {
        "text": "last",
        "type": "Title"
    },
    {
        "text": "ipython",
        "type": "Title"
    },
    {
        "text": "input",
        "type": "Title"
    },
    {
        "text": "16",
        "type": "UncategorizedText"
    },
    {
        "text": "a0f0e2502262",
        "type": "UncategorizedText"
    },
    {
        "text": "in",
        "type": "Title"
    },
    {
        "text": "module",
        "type": "Title"
    },
    {
        "text": "---->",
        "type": "UncategorizedText"
    },
    {
        "text": "csharp",
        "type": "Title"
    },
    {
        "text": "spanish",
        "type": "Title"
    },
    {
        "text": "AttributeError",
        "type": "Title"
    },
    {
        "text": "'Note'",
        "type": "Title"
    },
    {
        "text": "object",
        "type": "Title"
    },
    {
        "text": "has",
        "type": "NarrativeText"
    },
    {
        "text": "no",
        "type": "Title"
    },
    {
        "text": "attribute",
        "type": "Title"
    },
    {
        "text": "'spanish'",
        "type": "Title"
    },
    {
        "text": "Here are some other things you can do with Pitch objects. Get the sharp\nprinted nicely:",
        "type": "NarrativeText"
    },
    {
        "text": "print",
        "type": "Title"
    },
    {
        "text": "csharp",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "unicodeName",
        "type": "Title"
    },
    {
        "text": "C\u00e2\u0099\u00af",
        "type": "Title"
    },
    {
        "text": "Get some enharmonics \u2014 these are methods, so we add () to them:",
        "type": "NarrativeText"
    },
    {
        "text": "print",
        "type": "Title"
    },
    {
        "text": "csharp",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "getEnharmonic",
        "type": "Title"
    },
    {
        "text": "()",
        "type": "UncategorizedText"
    },
    {
        "text": "print",
        "type": "Title"
    },
    {
        "text": "csharp",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "getLowerEnharmonic",
        "type": "Title"
    },
    {
        "text": "()",
        "type": "UncategorizedText"
    },
    {
        "text": "##3",
        "type": "UncategorizedText"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "Note",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": ".pitch",
        "type": "Title"
    },
    {
        "text": "Note",
        "type": "Title"
    },
    {
        "text": "csharp.pitch",
        "type": "Title"
    },
    {
        "text": "So far, it looks like Pitch objects can do everything Note\nobjects can do and more. So why do we need Note objects? It's\nbecause they also have Duration attributes, as we'll see in the next\nsection. Without a Duration attribute, you cannot put an object into\na Measure or show it on your screen.",
        "type": "NarrativeText"
    },
    {
        "text": "Carving time with Duration objects\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "Note",
        "type": "Title"
    },
    {
        "text": "Note",
        "type": "Title"
    },
    {
        "text": "Duration.",
        "type": "Title"
    },
    {
        "text": "Duration",
        "type": "Title"
    },
    {
        "text": "Duration",
        "type": "Title"
    },
    {
        "text": "Duration",
        "type": "Title"
    },
    {
        "text": "Duration objects are best used when they're attached to something\nelse, like a Note or a Rest, but for now, let's look at what we\ncan do with them on their own.",
        "type": "NarrativeText"
    },
    {
        "text": "Duration objects reside in the duration module. When you create\na Duration object, you can say what type of duration you want it to\nbe when you create it.",
        "type": "NarrativeText"
    },
    {
        "text": "Here we'll create the duration of a half note:",
        "type": "NarrativeText"
    },
    {
        "text": "halfDuration",
        "type": "Title"
    },
    {
        "text": "duration",
        "type": "Title"
    },
    {
        "text": "Duration",
        "type": "Title"
    },
    {
        "text": "'half'",
        "type": "Title"
    },
    {
        "text": "The string \u009chalf\u009d is called the \u009ctype\u009d of the Duration. Music21\nDurations use the common American duration types: \u009cwhole\u009d, \u009chalf\u009d,\n\u009cquarter\u009d, \u009ceighth\u009d, \u009c16th\u009d, \u009c32nd\u009d, \u009c64th\u009d. Note that for durations\nshorter than an eighth note, we use numbers instead of spelling out the\nwhole name of the Duration type. Music21 also supports less commonly\nused types such as \u009cbreve\u009d (2 whole notes), \u009clonga\u009d (4 whole notes), and\n\u009cmaxima\u009d (8 whole notes) and on the other side, \u009c128th\u009d, \u009c256th\u009d, etc.\ndown to \u009c2048th\u009d notes. (Some of these very long and very short notes\ncan't be displayed in many musical notation systems, but it's good to\nknow that we're ready when they are).",
        "type": "NarrativeText"
    },
    {
        "text": "The other standard way of creating a Duration is by passing it a\nnumber when it is created. That number represents how many quarter notes\nlong it is. So we could have created our half note Duration by\nsaying 2 or 2.0. But we can also create Durations that\naren't exactly \u009cwhole\u009d, \u009chalf\u009d, \u009cquarter\u009d, etc. Let's create a dotted\nquarter note, which is 1.5 quarter notes long:",
        "type": "NarrativeText"
    },
    {
        "text": "dottedQuarter",
        "type": "Title"
    },
    {
        "text": "duration",
        "type": "Title"
    },
    {
        "text": "Duration",
        "type": "Title"
    },
    {
        "text": "1.5",
        "type": "UncategorizedText"
    },
    {
        "text": "Pitch",
        "type": "Title"
    },
    {
        "text": "Note",
        "type": "Title"
    },
    {
        "text": "Duration",
        "type": "Title"
    },
    {
        "text": ".quarterLength",
        "type": "Title"
    },
    {
        "text": "quarterLength of our",
        "type": "Title"
    },
    {
        "text": "dottedQuarter",
        "type": "Title"
    },
    {
        "text": "halfDuration",
        "type": "Title"
    },
    {
        "text": "dottedQuarter",
        "type": "Title"
    },
    {
        "text": "quarterLength",
        "type": "Title"
    },
    {
        "text": "1.5",
        "type": "UncategorizedText"
    },
    {
        "text": "halfDuration",
        "type": "Title"
    },
    {
        "text": "quarterLength",
        "type": "Title"
    },
    {
        "text": "2.0",
        "type": "UncategorizedText"
    },
    {
        "text": "The .type attribute tells you what general type of Duration you\nhave:",
        "type": "NarrativeText"
    },
    {
        "text": "halfDuration",
        "type": "Title"
    },
    {
        "text": "type",
        "type": "Title"
    },
    {
        "text": "'half'",
        "type": "Title"
    },
    {
        "text": "dottedQuarter",
        "type": "Title"
    },
    {
        "text": "type",
        "type": "Title"
    },
    {
        "text": "'quarter'",
        "type": "Title"
    },
    {
        "text": "The type attribute cannot be everything that describes the\nDuration, there has to be some place where music21 keeps track of\nthe fact that the dottedQuarter variable has a dot (otherwise it\nwouldn't have a quarterLength of 1.5). You'll find the attribute\ncalled .dots:",
        "type": "NarrativeText"
    },
    {
        "text": "halfDuration",
        "type": "Title"
    },
    {
        "text": "dots",
        "type": "Title"
    },
    {
        "text": "dottedQuarter",
        "type": "Title"
    },
    {
        "text": "dots",
        "type": "Title"
    },
    {
        "text": "The attributes of dots, type, and quarterLength are actually\nspecial attributes called \u009cproperties\u009d. A property is an attribute that\nis smart in some way. Let's change the number of dots on our\ndottedQuarter object and see what happens to the quarterLength\nproperty:",
        "type": "NarrativeText"
    },
    {
        "text": "dottedQuarter",
        "type": "Title"
    },
    {
        "text": "dots",
        "type": "Title"
    },
    {
        "text": "dottedQuarter",
        "type": "Title"
    },
    {
        "text": "quarterLength",
        "type": "Title"
    },
    {
        "text": "1.75",
        "type": "UncategorizedText"
    },
    {
        "text": "dottedQuarter",
        "type": "Title"
    },
    {
        "text": "dots",
        "type": "Title"
    },
    {
        "text": "dottedQuarter",
        "type": "Title"
    },
    {
        "text": "quarterLength",
        "type": "Title"
    },
    {
        "text": "1.875",
        "type": "UncategorizedText"
    },
    {
        "text": "dottedQuarter",
        "type": "Title"
    },
    {
        "text": "dots",
        "type": "Title"
    },
    {
        "text": "dottedQuarter",
        "type": "Title"
    },
    {
        "text": "quarterLength",
        "type": "Title"
    },
    {
        "text": "1.9375",
        "type": "UncategorizedText"
    },
    {
        "text": "Or let's change the quarterLength of the dottedQuarter and see what\nhappens to the type and dots:",
        "type": "NarrativeText"
    },
    {
        "text": "dottedQuarter",
        "type": "Title"
    },
    {
        "text": "quarterLength",
        "type": "Title"
    },
    {
        "text": "0.25",
        "type": "UncategorizedText"
    },
    {
        "text": "dottedQuarter",
        "type": "Title"
    },
    {
        "text": "type",
        "type": "Title"
    },
    {
        "text": "'16th'",
        "type": "UncategorizedText"
    },
    {
        "text": "dottedQuarter",
        "type": "Title"
    },
    {
        "text": "dots",
        "type": "Title"
    },
    {
        "text": "QuarterLengths are so important to music21 that we'll sometimes\nabbreviate them as qL or qLs. Almost everything that is measured\nin music21 is measured in qLs.",
        "type": "NarrativeText"
    },
    {
        "text": "Music21 can also deal with other quarterLengths such as 0.8, which\nis 4/5ths of a quarter note, or 1/3, which is an eighth note triplet.\n(For this reason, users compiling spreadsheets or other text-based\noutput should expect to find the occasional quarterLength expressed\nas a Fraction.)",
        "type": "NarrativeText"
    },
    {
        "text": "(You can go ahead and make a triplet or other\nTuplet, but we'll get to triplets,\nincluding tips for manipulating a Fraction in Chapter 19).",
        "type": "NarrativeText"
    },
    {
        "text": "Back to Notes\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "Note",
        "type": "Title"
    },
    {
        "text": ".pitch",
        "type": "Title"
    },
    {
        "text": "Pitch",
        "type": "Title"
    },
    {
        "text": ".duration",
        "type": "Title"
    },
    {
        "text": "Duration",
        "type": "Title"
    },
    {
        "text": "Pitch",
        "type": "Title"
    },
    {
        "text": "Note",
        "type": "Title"
    },
    {
        "text": "C4",
        "type": "Title"
    },
    {
        "text": "Duration",
        "type": "Title"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "note",
        "type": "Title"
    },
    {
        "text": "Note",
        "type": "Title"
    },
    {
        "text": "()",
        "type": "UncategorizedText"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "music21",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "Pitch",
        "type": "Title"
    },
    {
        "text": "C4",
        "type": "Title"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "duration",
        "type": "Title"
    },
    {
        "text": "music21",
        "type": "Title"
    },
    {
        "text": "duration",
        "type": "Title"
    },
    {
        "text": "Duration",
        "type": "Title"
    },
    {
        "text": "1.0",
        "type": "UncategorizedText"
    },
    {
        "text": "But we can play around with them:",
        "type": "NarrativeText"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "nameWithOctave",
        "type": "Title"
    },
    {
        "text": "'E-5'",
        "type": "UncategorizedText"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "duration",
        "type": "Title"
    },
    {
        "text": "quarterLength",
        "type": "Title"
    },
    {
        "text": "3.0",
        "type": "UncategorizedText"
    },
    {
        "text": "and then the other properties change accordingly:",
        "type": "NarrativeText"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "duration",
        "type": "Title"
    },
    {
        "text": "type",
        "type": "Title"
    },
    {
        "text": "'half'",
        "type": "Title"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "duration",
        "type": "Title"
    },
    {
        "text": "dots",
        "type": "Title"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "name",
        "type": "Title"
    },
    {
        "text": "'E-'",
        "type": "UncategorizedText"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "accidental",
        "type": "Title"
    },
    {
        "text": "music21",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "Accidental",
        "type": "Title"
    },
    {
        "text": "flat",
        "type": "Title"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "octave",
        "type": "Title"
    },
    {
        "text": "We already said that some of the attributes of Pitch can also be\ncalled on the Note object itself. The same is true for the most\nimportant attributes of Duration:",
        "type": "NarrativeText"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "name",
        "type": "Title"
    },
    {
        "text": "'E-'",
        "type": "UncategorizedText"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "quarterLength",
        "type": "Title"
    },
    {
        "text": "3.0",
        "type": "UncategorizedText"
    },
    {
        "text": "Let's change the quarterLength back to 1.0 for now:",
        "type": "NarrativeText"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "quarterLength",
        "type": "Title"
    },
    {
        "text": "1.0",
        "type": "UncategorizedText"
    },
    {
        "text": "Notes",
        "type": "Title"
    },
    {
        "text": "Pitch",
        "type": "Title"
    },
    {
        "text": "Duration",
        "type": "Title"
    },
    {
        "text": "Notes",
        "type": "Title"
    },
    {
        "text": "Lyric objects\njust by setting the",
        "type": "NarrativeText"
    },
    {
        "text": "lyric\nproperty. (For reference, the",
        "type": "Title"
    },
    {
        "text": "lyric",
        "type": "Title"
    },
    {
        "text": "GeneralNote, which is a \u009cbase\nclass\u009d from which the",
        "type": "NarrativeText"
    },
    {
        "text": "Note",
        "type": "Title"
    },
    {
        "text": "Note",
        "type": "Title"
    },
    {
        "text": "lyric",
        "type": "Title"
    },
    {
        "text": "GeneralNote",
        "type": "Title"
    },
    {
        "text": "otherNote",
        "type": "Title"
    },
    {
        "text": "note",
        "type": "Title"
    },
    {
        "text": "Note",
        "type": "Title"
    },
    {
        "text": "\"F6\"",
        "type": "UncategorizedText"
    },
    {
        "text": "otherNote",
        "type": "Title"
    },
    {
        "text": "lyric",
        "type": "Title"
    },
    {
        "text": "\"I'm the Queen of the Night!\"",
        "type": "NarrativeText"
    },
    {
        "text": "But let's do something more complex. Here I add multiple lyrics to\nn1 using the Note's addLyric()\nmethod. And instead of adding a simple String, I'll add as a lyric the\nname of the note itself and its pitchClassString.",
        "type": "NarrativeText"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "addLyric",
        "type": "Title"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "nameWithOctave",
        "type": "Title"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "addLyric",
        "type": "Title"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "pitch",
        "type": "Title"
    },
    {
        "text": "pitchClassString",
        "type": "NarrativeText"
    },
    {
        "text": "Finally, lets put the quarterLength of the note as a string with a\npreface \u009cQL:\u009d:",
        "type": "NarrativeText"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "addLyric",
        "type": "Title"
    },
    {
        "text": "'QL:",
        "type": "UncategorizedText"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "quarterLength",
        "type": "Title"
    },
    {
        "text": "The placement of an \u009cf\u009d before the string\nf'QL: {n1.quarterLength}' says to substitute anything in {}\nwith its actual value as a string. (Remember that .quarterLength is\nnot a string, but a float).",
        "type": "NarrativeText"
    },
    {
        "text": "As it should be becoming clear, we can always check our work with the\nshow() method.",
        "type": "NarrativeText"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "show",
        "type": "Title"
    },
    {
        "text": "()",
        "type": "UncategorizedText"
    },
    {
        "text": "If we now edit the\nquarterLength\nproperty we can still change the Note's Duration. But because\nwe already set the lyric to show \u009cQL: 1.0, it won't be changed\nwhen we .show() it again in the following example.",
        "type": "NarrativeText"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "quarterLength",
        "type": "Title"
    },
    {
        "text": "6.25",
        "type": "UncategorizedText"
    },
    {
        "text": "n1",
        "type": "Title"
    },
    {
        "text": "show",
        "type": "Title"
    },
    {
        "text": "()",
        "type": "UncategorizedText"
    },
    {
        "text": "There are many more things we can do with a Note object, but I'm\nitching to look at what happens when we put multiple Notes together\nin a row. And to do that we'll need to learn a bit about the topic of\nChapter 4: Streams.",
        "type": "NarrativeText"
    },
    {
        "text": "Navigation",
        "type": "Title"
    },
    {
        "text": "index",
        "type": "ListItem"
    },
    {
        "text": "modules |",
        "type": "ListItem"
    },
    {
        "text": "next |",
        "type": "ListItem"
    },
    {
        "text": "previous |",
        "type": "ListItem"
    },
    {
        "text": "music21 \u00bb",
        "type": "ListItem"
    },
    {
        "text": "User's Guide \u00bb",
        "type": "ListItem"
    },
    {
        "text": "User's Guide, Chapter 3: Pitches, Durations, and Notes again",
        "type": "ListItem"
    },
    {
        "text": "\u00a9 Copyright 2006-2023 Michael Scott Asato Cuthbert.\n      Last updated on Jun 12, 2023.",
        "type": "NarrativeText"
    }
]