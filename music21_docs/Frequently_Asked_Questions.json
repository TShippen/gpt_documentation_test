[
    {
        "text": "Navigation",
        "type": "Title"
    },
    {
        "text": "index",
        "type": "ListItem"
    },
    {
        "text": "modules |",
        "type": "ListItem"
    },
    {
        "text": "next |",
        "type": "ListItem"
    },
    {
        "text": "previous |",
        "type": "ListItem"
    },
    {
        "text": "music21 \u00bb",
        "type": "ListItem"
    },
    {
        "text": "About music21 \u00bb",
        "type": "ListItem"
    },
    {
        "text": "Frequently Asked Questions",
        "type": "ListItem"
    },
    {
        "text": "Previous topic",
        "type": "Title"
    },
    {
        "text": "Applications and Extensions of music21",
        "type": "Title"
    },
    {
        "text": "Next topic",
        "type": "Title"
    },
    {
        "text": "List of Works Found in the music21 Corpus",
        "type": "Title"
    },
    {
        "text": "Table of Contents",
        "type": "Title"
    },
    {
        "text": "Frequently Asked Questions\nGeneral\nUses\nFeature requests and Consulting\n3rd-Party Utilities",
        "type": "ListItem"
    },
    {
        "text": "Table of Contents",
        "type": "Title"
    },
    {
        "text": "About music21\nWhat is music21?\nAuthors, Acknowledgments, Contributing, and Licensing\nApplications and Extensions of music21\nFrequently Asked Questions\nList of Works Found in the music21 Corpus",
        "type": "ListItem"
    },
    {
        "text": "User's Guide",
        "type": "ListItem"
    },
    {
        "text": "Module Reference",
        "type": "ListItem"
    },
    {
        "text": "Installation",
        "type": "ListItem"
    },
    {
        "text": "Developer Reference",
        "type": "ListItem"
    },
    {
        "text": "Documentation and tests in progress",
        "type": "ListItem"
    },
    {
        "text": "Quick search",
        "type": "Title"
    },
    {
        "text": "This Page",
        "type": "Title"
    },
    {
        "text": "Show Source",
        "type": "ListItem"
    },
    {
        "text": "Frequently Asked Questions\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "General\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "How do I ask a question so that it becomes frequently asked?",
        "type": "NarrativeText"
    },
    {
        "text": "Don't you hate FAQs that are not based on anything anyone's ever asked?\nTo ask, post to https://groups.google.com/g/music21list.\nBut first read what we've already come up with below.",
        "type": "NarrativeText"
    },
    {
        "text": "Why is it called music21?",
        "type": "NarrativeText"
    },
    {
        "text": "music21 gets its name from the fact that it was (mainly) created at\nMIT in the Music and Theater Arts Section there.  At MIT, everything\nhas a number, and the department number for music is 21M.  There's\nno connection to \u009cTwenty-first century\u009d etc. and therefore superior\nto older software. In fact, if I had thought of that mental connection\nI probably would have come up with a different name.",
        "type": "NarrativeText"
    },
    {
        "text": "There was a tradition early on of naming software that dealt with\nmusic, with \u009cMUSIC\u009d followed by a number (https://en.wikipedia.org/wiki/MUSIC-N).\nThere is famously Max Matthews'\nMUSIC II, III, and IV (the sequels to just plain \u009cMUSIC\u009d),\nMUSIC V (Matthews and Miller),\nMUSIC 360 and MUSIC 11 (Vercoe et al., which became CSound).\nThese systems were originally created to synthesize sound digitally\nthough their successor systems can do quite a number of different things.",
        "type": "NarrativeText"
    },
    {
        "text": "I figured that since no one had actually released a piece of software\nin over 35 years that actually followed the \u009cMusic N\u009d naming structure,\nit was fair game to think of it not as the paradigmatic name just for a\nsoftware synthesis package, but for any new or original usage of software\nand music.",
        "type": "NarrativeText"
    },
    {
        "text": "I'm pretty tickled that the new naming convention is getting an homage\nin Anas Ghrab's music22 package: https://pypi.org/project/music22",
        "type": "NarrativeText"
    },
    {
        "text": "When I was giving a talk in Germany, everyone referred to it as\nMusikeinundzwanzig, and that made me happy, so feel free to localize\nthe name however you like when speaking in your language.\nMusique vignt-et-un, \u00e9\u009f\u00b3\u00e6\u00a5\u00bd\u00e4\u00ba\u008c\u00e5\u008d\u0081\u00e4\u00b8\u0080, whatever.",
        "type": "NarrativeText"
    },
    {
        "text": "What is the native music21 data format?",
        "type": "NarrativeText"
    },
    {
        "text": "Quick answer: There is none, but it doesn't matter.",
        "type": "NarrativeText"
    },
    {
        "text": "Longer answer: music21 is a toolkit for the manipulation and analysis of data\nthat you already have or are generating on the fly. As such, its strength is its (and python's)\nability to work with many common formats and easy extensibility to work with many more.\nYou will find that for the most part you will not need to preserve your\nmusic21 data in an interchangeable format. And the number of things you can do\nwith music21 makes it impossible for us to create formats for every possible use.\nWe work with music21 all the time for our work and have never needed one.",
        "type": "NarrativeText"
    },
    {
        "text": "But if you must store your music21 data somehow, here are some suggestions:",
        "type": "NarrativeText"
    },
    {
        "text": "For data that can quickly and exactly be recreated,\nuse the script that generates as your data storage.\nThen just rerun the script to get your data back.",
        "type": "ListItem"
    },
    {
        "text": "For storing music notation, musicXML output will work well for many purposes.\nIf you just want to store an\naudio file or graphic of your output, MIDI or Lilypond->PNG could work.",
        "type": "ListItem"
    },
    {
        "text": "For data that cannot easily be recreated (because it's computationally expensive to create, or\nrelies on user input, or is stochastically generated),\nPython's pickle package will allow you\nto store your data on disk.  These files cannot necessarily\nbe read in by a later version of music21\n(This is the reverse of the problem Finale has,\nwhere you can only read older versions of files), so it\nshould not be used for long term storage and sharing.\nRun s.freeze() and then s.thaw() later.  Or for more deeply configurable\nneeds, setupSerializationScaffold() and\nteardownSerializationScaffold()\nbefore running pickle.dump(yourStream) and\nafter running pickle.load(yourStream)\nrespectively and almost everything will be preserved.",
        "type": "ListItem"
    },
    {
        "text": "For data that cannot easily be recreated but needs long-term storage and sharing,\ntry saving the relevant\nparts of the data in an XML, json, or even CSV(!) format.\nSee plistlib at https://docs.python.org/dev/library/plistlib.html\nor https://code.activestate.com:443/recipes/440595. You cannot store every\nelement of python's object structure,\nbut you should easily be able to store the parts that are difficult to recreate.\nMusic21 has some facility for a JSON storage of Streams, but it is not complete.",
        "type": "ListItem"
    },
    {
        "text": "If you're programming data structures too complex to be encapsulated\nin one of the solutions above,\nyou should have enough experience to create a data storage format of your own.\nPlease consider contributing\nyour solution to improve the package.",
        "type": "ListItem"
    },
    {
        "text": "I'm ready to give it a try, but how do I install music21?",
        "type": "NarrativeText"
    },
    {
        "text": "Please see the complete install instructions:\nUser's Guide, Chapter 1: Installing music21.",
        "type": "NarrativeText"
    },
    {
        "text": "I'm using Linux/GNU/Unix and I'm having trouble configuring music21, can\nyou help?",
        "type": "NarrativeText"
    },
    {
        "text": "Unfortunately, due to the number of different flavors of open-source\noperating systems, the development team can only give free help to\nMac and Windows installation. (but see paid support, below).",
        "type": "NarrativeText"
    },
    {
        "text": "Uses\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "Can I synthesize new sounds with music21?",
        "type": "NarrativeText"
    },
    {
        "text": "Yes, and no.  Music21 is primarily built for manipulating symbolic\nmusical data not sound waves.  There are lots of great programs for\ndoing that.  But the symbolic data, however, can be used as data within\na large variety of synthesis packages. So you could create new\nmusic21 objects that control the synthesis package of your choosing.",
        "type": "NarrativeText"
    },
    {
        "text": "Can music21 read in music directly from an image or a .pdf?",
        "type": "NarrativeText"
    },
    {
        "text": "Sorry, that's beyond music21's capabilities. This technology\nis called OMR (Optical Music Recognition) and it's a whole separate\nfield of research in itself.  Audiveris is an open-source OMR\nsoftware toolkit.  The development team here has had good experience\nwith the commercial SmartScore application.  Music21 does have a\ngood set of modules for improving the output of OMR after it's done.\nSee music21.omr.correctors.",
        "type": "NarrativeText"
    },
    {
        "text": "I'm having trouble reading in MIDI.  The docs for music21.midi.translate\nand music21.converter.subConverters.ConverterMIDI are rather hard\nto understand.  (Same for musicxml, mei, etc.)",
        "type": "NarrativeText"
    },
    {
        "text": "To save a Stream (stored as variable s) afterwards, just call:\ns.write(\u0098midi', fp='filename.mid').  Or to hear it immediately,\ns.show(\u0098midi').",
        "type": "NarrativeText"
    },
    {
        "text": "Feature requests and Consulting\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "Music21 doesn't have some feature that I need, how do I get it added?",
        "type": "NarrativeText"
    },
    {
        "text": "It won't hurt to email the list (or us directly) and we'll consider it.\nHowever, we do have a priority list based on what we think the widest\naudience will require or what we need for our own research.  If you'd\nlike your request to leap-frog to the front of the line, the best way\nis to endow the programming of your feature through a donation that will\nenable us to increase the number of student programming assistants we\nemploy.  (Or side-step us and offer a cash bounty on the music21list\nitself).",
        "type": "NarrativeText"
    },
    {
        "text": "No, you don't understand, I really need this feature!",
        "type": "NarrativeText"
    },
    {
        "text": "If you really need something done in music21, we offer paid support\nby the hour at standard consulting rates. Contact michael.asato.cuthbert@gmail.com\nfor details and rates.",
        "type": "NarrativeText"
    },
    {
        "text": "Is this also what I should do if I need help using music21 for my own project?",
        "type": "NarrativeText"
    },
    {
        "text": "Yes, if you're having trouble getting music21 to do what you want and you've\ntried the mailing list/StackOverflow, etc. consulting is available to help.",
        "type": "NarrativeText"
    },
    {
        "text": "Why not put the rate here?",
        "type": "NarrativeText"
    },
    {
        "text": "The rate varies according to the difficulty of the feature\u2014whether it\nrequires a principal investigator to run or whether it could be incorporated\ninto the education of a student; whether licensing agreements need to be signed, etc.",
        "type": "NarrativeText"
    },
    {
        "text": "Discounts are available for\nacademic researchers/composers who consider the consultation sufficiently\nessential as to add\nauthorship credit to the development team on a publication.",
        "type": "NarrativeText"
    },
    {
        "text": "3rd-Party Utilities\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "What is MusicXML?",
        "type": "NarrativeText"
    },
    {
        "text": "MusicXML is a file format for exchanging musical scores among different\nprograms, such as, oh\u2026 music21 and Finale (or music21 and Sibelius,\nor Dorico, or MuseScore).\nIt was created by Recordare (Michael Good, CEO) and now run by the W3C. More\ninformation about the project can be found at:",
        "type": "NarrativeText"
    },
    {
        "text": "https://www.musicxml.com/",
        "type": "ListItem"
    },
    {
        "text": "And this Humdrum about which you speak?",
        "type": "NarrativeText"
    },
    {
        "text": "It's another framework for studying music as symbolic data using\nsimple text files and UNIX scripting tools.  Created by David Huron\nin the 80s and 90s. We're big fans of Humdrum\nhere at music21, but we thought that it was time to take a\ndifferent approach.",
        "type": "NarrativeText"
    },
    {
        "text": "Information on Humdrum can be found here at the following links:",
        "type": "NarrativeText"
    },
    {
        "text": "https://www.humdrum.org",
        "type": "ListItem"
    },
    {
        "text": "https://kern.humdrum.org",
        "type": "ListItem"
    },
    {
        "text": "Navigation",
        "type": "Title"
    },
    {
        "text": "index",
        "type": "ListItem"
    },
    {
        "text": "modules |",
        "type": "ListItem"
    },
    {
        "text": "next |",
        "type": "ListItem"
    },
    {
        "text": "previous |",
        "type": "ListItem"
    },
    {
        "text": "music21 \u00bb",
        "type": "ListItem"
    },
    {
        "text": "About music21 \u00bb",
        "type": "ListItem"
    },
    {
        "text": "Frequently Asked Questions",
        "type": "ListItem"
    },
    {
        "text": "\u00a9 Copyright 2006-2023 Michael Scott Asato Cuthbert.\n      Last updated on Jun 14, 2023.",
        "type": "NarrativeText"
    }
]