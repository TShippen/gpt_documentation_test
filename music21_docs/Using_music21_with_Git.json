[
    {
        "text": "Navigation",
        "type": "Title"
    },
    {
        "text": "index",
        "type": "ListItem"
    },
    {
        "text": "modules |",
        "type": "ListItem"
    },
    {
        "text": "next |",
        "type": "ListItem"
    },
    {
        "text": "previous |",
        "type": "ListItem"
    },
    {
        "text": "music21 \u00bb",
        "type": "ListItem"
    },
    {
        "text": "Developer Reference \u00bb",
        "type": "ListItem"
    },
    {
        "text": "Using music21 with Git",
        "type": "ListItem"
    },
    {
        "text": "Previous topic",
        "type": "Title"
    },
    {
        "text": "Using music21 with the Jupyter (iPython) Notebook",
        "type": "NarrativeText"
    },
    {
        "text": "Next topic",
        "type": "Title"
    },
    {
        "text": "Unofficial MusicXML Test Suite",
        "type": "Title"
    },
    {
        "text": "Table of Contents",
        "type": "Title"
    },
    {
        "text": "Using music21 with Git\nInstalling Git\nInstall PyCharm\nForking music21 on GitHub\nCommitting, pushing and pulling\nSending pull requests to the official music21 repository\nGetting your pull requests accepted",
        "type": "ListItem"
    },
    {
        "text": "Table of Contents",
        "type": "Title"
    },
    {
        "text": "About music21",
        "type": "ListItem"
    },
    {
        "text": "User's Guide",
        "type": "ListItem"
    },
    {
        "text": "Module Reference",
        "type": "ListItem"
    },
    {
        "text": "Installation",
        "type": "ListItem"
    },
    {
        "text": "Developer Reference\nTesting music21\nDocumenting music21\nDocumenting modules and classes\nBuilding Documentation\nUsing music21 with the Jupyter (iPython) Notebook\nUsing music21 with Git\nUnofficial MusicXML Test Suite\nMusic21's Mistakes",
        "type": "ListItem"
    },
    {
        "text": "Documentation and tests in progress",
        "type": "ListItem"
    },
    {
        "text": "Quick search",
        "type": "Title"
    },
    {
        "text": "This Page",
        "type": "Title"
    },
    {
        "text": "Show Source",
        "type": "ListItem"
    },
    {
        "text": "Using music21 with Git\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "Music21 stores its master code base in the Git code format at the GitHub\nwebsite (https://github.com/cuthbertLab/music21 ).\nIn order to have the latest, unreleased, versions of music21, which often incorporate new\nbug fixes, users will need to be familiar with Git.",
        "type": "NarrativeText"
    },
    {
        "text": "IMPORTANT: BEFORE BEGINNING, UNINSTALL ALL EXISTING VERSIONS OF `music21`.\nADDITIONAL VERSIONS OF MUSIC21 INSTALLED IN OTHER LOCATIONS CAN CAUSE DIRECTORY\nROUTING PROBLEMS.",
        "type": "NarrativeText"
    },
    {
        "text": "Installing Git\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "First, make sure you have Git installed. You can find binaries for Windows, OSX\nand Unix at https://git-scm.com/.",
        "type": "NarrativeText"
    },
    {
        "text": "But the best way to do almost everything with Git and music21 today is with the\nGitHub Desktop app, at https://desktop.github.com <https://desktop.github.com>.",
        "type": "NarrativeText"
    },
    {
        "text": "Install PyCharm\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "Developers of music21 who want access to support or committing\nto the code base need to\nuse an IDE called PyCharm, which allows for easy debugging and\nenforcing of coding standards\nsuch as consistent whitespace, no unused variable names, and\nsimple error catching. Thus, while\nPyCharm is not strictly necessary to editing the Python\nfiles that make up music21, it is the\nonly supported environment for receiving technical assistance.\nThus students and others who\nwish to be part of the development team for music21 will\nneed to follow the instructions below\non using Git for PyCharm.",
        "type": "NarrativeText"
    },
    {
        "text": "Forking music21 on GitHub\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "The main development paradigm in Git is to create a \u009cFork\u009d or individualized\ncopy of the music21 code base under your own name and make modifications there.\nYou may \u009cPull\u009d changes that we have made to the main music21 version into your\nown fork so that your fork stays up to date.  If you'd like to contribute your\nchanges back to the main codebase, you will initiate something called a \u009cpull\nrequest\u009d later.",
        "type": "NarrativeText"
    },
    {
        "text": "To fork the official music21 repository, simply navigate to\nhttps://github.com/cuthbertLab/music21 on GitHub while signed in to your\nGitHub account, and click Fork in the upper right-hand corner of the page.",
        "type": "NarrativeText"
    },
    {
        "text": "Committing, pushing and pulling\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "This used to be really hard\u2026now look at the instructions\nfor the Github Desktop app.",
        "type": "NarrativeText"
    },
    {
        "text": "Sending pull requests to the official music21 repository\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "To get your changes into the official music21 repository, you'll have to make a\npull request via the GitHub web site or the desktop app.",
        "type": "NarrativeText"
    },
    {
        "text": "A pull request is just what it sounds like:\na request to another repository (the music21 team's copy) for them\nto pull in changes from your repository and add them to the centralized version.",
        "type": "NarrativeText"
    },
    {
        "text": "Making pull requests is easy:",
        "type": "NarrativeText"
    },
    {
        "text": "Log into GitHub and find your fork of music21. Under the repository summary\nheader you'll see a green button with two arrows, labeled \u009cCompare &\nreview\u009d.\nClick that button:",
        "type": "ListItem"
    },
    {
        "text": "If your repository differs from the official music21 repository, you'll be\nshown the diff stats, as well as a large banner with the text Click to\ncreate a pull request for this comparison.\nClick on that banner to continue:",
        "type": "ListItem"
    },
    {
        "text": "Almost done. Now you can write a description of what your pull request\ninvolves. While the music21 team can and will review the diffs for your\nrequest, please provide a useful description. What do your changes\naccomplish?  Do they address one of the issues in the official issue\ntracker? Which issue?  Do they represent an enhancement, or new\nfunctionality?\nWhen you've finished writing your description, click on the Send pull\nrequest button. You've sent your pull pull request!",
        "type": "ListItem"
    },
    {
        "text": "Getting your pull requests accepted\u00c2\u00b6",
        "type": "Title"
    },
    {
        "text": "Once you've sent a pull request to the music21 team they'll need to review the\nchanges you've suggested.  They can opt to accept some, all or none of the\ncommits you've included in your pull request. If the work looks good, they'll\nmerge your changes into the official repository.",
        "type": "NarrativeText"
    },
    {
        "text": "What do we mean by the \u009cif the work looks good\u009d? The first and highest priority\nis that if the code expands music21 in any way that it is well documented\n(see Documenting music21) and includes tests that ensure that future changes to\nthe system will not break the code.  You will need to run test/multiprocessTest.py\nwhich will update the file test/lastResults.txt to show that the tests have passed.\nTo run these tests you will need to install the optional modules such as NumPy,\nmatplotlib, etc. The tests you have written cannot add appreciatively to the amount\nof time it takes to run the test suite (so a few milliseconds for a tiny addition, at\nmost a second or two for a major contribution).  The code needs to be well placed\nwithin the structure of the library so as not to add unneeded complexity. For instance,\nif your new methods will only apply to a small number of users working on a constrained\nrepertory (such as chorales, jazz, medieval music, etc.) it should not add ten new methods\nto Note or Stream. The contributions cannot require any new external dependencies and\neven optional dependencies should be discussed with the music21 team before attempting\na Pull Request.  The code should work on Mac, Windows (watch out for file system calls),\nand Unix equally well.  It sounds hard, but after a while looking out for these caveats\nbecomes second nature and will help ensure the toolkit is viable for at least a decade\nto come.",
        "type": "NarrativeText"
    },
    {
        "text": "Navigation",
        "type": "Title"
    },
    {
        "text": "index",
        "type": "ListItem"
    },
    {
        "text": "modules |",
        "type": "ListItem"
    },
    {
        "text": "next |",
        "type": "ListItem"
    },
    {
        "text": "previous |",
        "type": "ListItem"
    },
    {
        "text": "music21 \u00bb",
        "type": "ListItem"
    },
    {
        "text": "Developer Reference \u00bb",
        "type": "ListItem"
    },
    {
        "text": "Using music21 with Git",
        "type": "ListItem"
    },
    {
        "text": "\u00a9 Copyright 2006-2023 Michael Scott Asato Cuthbert.\n      Last updated on Jun 12, 2023.",
        "type": "NarrativeText"
    }
]